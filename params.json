{"name":"Geospatial Distribution Map","tagline":"Developed with python and R","body":"### Project Introduction\r\nI was in awe with the Facebook Global Social Network Map created by Paul Butler:\r\n\r\n![abcd](http://revolution-computing.typepad.com/.a/6a010534b1db25970b0147e0ae51b2970b-800wi)\r\n\r\nSo i thought of trying my hand in R and hence started this small experiment of mine with this image in my mind.\r\n\r\n***\r\n## Information Collection\r\nFacebook provides an awesome Graph API , that allows to get information regrding your friend's DOB,location,hometown,relationship status and many more.\r\nCheck out the graph API here: [Facebook Developers Tool](https://developers.facebook.com/tools-and-support/)\r\nI particularly used python to query the Graph API to get hold of location detail of my facebook friends.\r\n\r\nStart with importing all this necessary libraries\r\n```\r\nimport sys\r\nimport urllib\r\nimport urllib2\r\nimport time\r\nimport datetime\r\nimport json\r\nimport webbrowser\r\nimport csv\r\n```\r\n\r\nFacebook supports OAuth authentication.To get access to the facebook Graph API ,authentication is required.\r\n\r\n```\r\nwebbrowser.open(\"https://www.facebook.com/dialog/oauth?\"\r\n                    \"response_type=token&client_id=145634995501895&\"\r\n                    \"redirect_uri=http://developers.facebook.com/tools/\"\r\n                    \"explorer/callback&scope=user_birthday,user_friends,publish_actions\"\r\n                    \",read_stream\")\r\n```\r\n\r\nOnce authentication is done , we can proceed with the Facebook Graph Explorer to get an access token.This token will be used for every query that is made to the API.\r\n\r\n```\r\n webbrowser.open(\"http://developers.facebook.com/tools/explorer\")\r\n```\r\n\r\nCopy the access token to any local variable when asked \r\n```\r\nACCESS_TOKEN = raw_input(\"\\nEnter the TOKEN string obtained from API explorer page: \\n\")\r\n```\r\nNow lets fetch some JSON data from the API.\r\n\r\n```\r\nhometown=urllib2.urlopen(ACCESS_URL+'https://graph.facebook.comfields=friends.fields(hometown)&access_token='+ACCESS_TOKEN)\r\n```\r\nNow we have the entire JSON info about mu facebook friend and their hometown.\r\nNow we have to parse the JSON to get individual hometown.\r\n\r\n```\r\n   count=1\r\n   while(count<numoffriends):    \r\n        if 'hometown' in json.loads(datafile.read())['friends']['data'][k]:\r\n            fhometown=json.loads(datafile.read())['friends']['data'][k]['hometown']['name']\r\n            decode_address_to_coordinates(fhometown)          \r\n        count=count+1\r\n```\r\n\r\nNow we have the string of the hometown of all my facobook friend ,lets find the co-ordinates using Google MAP API and put the data in a csv file.\r\n\r\n```\r\ndef decode_address_to_coordinates(address):\r\n        params = {\r\n                'address' : address,\r\n                'sensor' : 'true',\r\n        }  \r\n        url = 'http://maps.google.com/maps/api/geocode/json?' + urllib.urlencode(params)\r\n        response = urllib2.urlopen(url)\r\n        result = json.load(response)\r\n        log=result['results'][0]['geometry']['location']['lng']\r\n        lat=result['results'][0]['geometry']['location']['lat']\r\n        \r\n        p='%f,%f'%(log,lat)\r\n        myfile=open(\"data.csv\", \"a\")\r\n        myfile.write(p + \"\\n\")\r\n```\r\n\r\nNow atlast we have the co-oridnate details of all my friends.\r\n\r\n\r\n## Drawing the Map with R\r\n\r\nLets first install all the required packages,\r\n\r\n```\r\nlibrary(ggmap)\r\nlibrary(geosphere)\r\nlibrary(maps)\r\nlibrary(ggplot2)\r\n```\r\n\r\nTo install any package in R type ,\r\n```\r\npackage.install(packagename)\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}